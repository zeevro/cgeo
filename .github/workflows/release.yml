name: Release

on:
  workflow_dispatch:

jobs:
  package-version:
    name: Check package version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.package-version.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Get tag name from package version
        id: package-version
        run: |
          tag=v$(yq .project.version pyproject.toml)
          if [[ -n $(git tag -l "$tag") ]]; then
            echo "::error::Tag $tag already exists!"
            exit 1
          fi
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    needs: package-version
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v4

      - name: Build sdist
        run: uv build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/

  pure-wheel:
    name: Build pure-python wheel
    runs-on: ubuntu-latest
    needs: package-version
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v4

      - name: Remove setup.py (so C extension isn't built)
        run: rm setup.py

      - name: Build wheel
        run: uv build --wheel

      - name: Test wheel
        run: uv run --directory ${{ runner.temp }} --with ${{ github.workspace }}/dist/*.whl ${{ github.workspace }}/test.py

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: pure-wheel
          path: dist/

  native-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: package-version
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22

      - name: Upload wheels artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/

  release:
    name: Release
    needs: [package-version, sdist, pure-wheel, native-wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create release
        run: gh release create --target ${{ github.sha }} --generate-notes ${{ needs.package-version.outputs.tag }} ./dist/*
        env:
          GITHUB_TOKEN: ${{ github.token }}

  publish:
    name: Publish
    needs: [sdist, pure-wheel, native-wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/zeevro-cgeo
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - uses: astral-sh/setup-uv@v4

      - name: Publish to PyPI
        run: uv publish
